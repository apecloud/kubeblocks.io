"use strict";(self.webpackChunkkubeblocks_io=self.webpackChunkkubeblocks_io||[]).push([[9761],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),b=o,h=p["".concat(i,".").concat(b)]||p[b]||d[b]||r;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=b;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:o,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},3711:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={title:"Configure IM alert",description:"How to enable IM alert",sidebar_position:2},s="Configure IM alert",l={unversionedId:"user_docs/kubeblocks-for-postgresql/observability/alert",id:"user_docs/kubeblocks-for-postgresql/observability/alert",title:"Configure IM alert",description:"How to enable IM alert",source:"@site/docs/user_docs/kubeblocks-for-postgresql/observability/alert.md",sourceDirName:"user_docs/kubeblocks-for-postgresql/observability",slug:"/user_docs/kubeblocks-for-postgresql/observability/alert",permalink:"/docs/user_docs/kubeblocks-for-postgresql/observability/alert",draft:!1,editUrl:"https://github.com/apecloud/kubeblocks/tree/main/docs/user_docs/kubeblocks-for-postgresql/observability/alert.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Configure IM alert",description:"How to enable IM alert",sidebar_position:2},sidebar:"docs",previous:{title:"Monitor database",permalink:"/docs/user_docs/kubeblocks-for-postgresql/observability/monitor-database"},next:{title:"KubeBlocks CLI Overview",permalink:"/docs/user_docs/cli/"}},i={},c=[{value:"How KubeBlocks alert works",id:"how-kubeblocks-alert-works",level:2},{value:"Alert rules",id:"alert-rules",level:2},{value:"Configure IM alert",id:"configure-im-alert-1",level:2},{value:"Before you start",id:"before-you-start",level:3},{value:"Step 1. Configure alert channels",id:"step-1-configure-alert-channels",level:3},{value:"Step 2. Configure the receiver",id:"step-2-configure-the-receiver",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configure-im-alert"},"Configure IM alert"),(0,o.kt)("p",null,"Alerts are mainly used for daily error response to improve system availability. Kubeblocks has a set of built-in common alert rules and integrates multiple notification channels. The alert capability of Kubeblocks can meet the operation and maintenance requirements of production-level online clusters."),(0,o.kt)("h2",{id:"how-kubeblocks-alert-works"},"How KubeBlocks alert works"),(0,o.kt)("p",null,"KubeBlocks built-in alert system adopts the mainstream open-source solution in the cloud native scenario, i.e. the combined solution of Prometheus and AlertManager. KubeBlocks also uses the AlertManager Webhook extension to integrate new notification channels, such as Feishu custom bot, Dingtalk custom bot, Wechat custom bot."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Alert",src:n(3920).Z,width:"1610",height:"960"})),(0,o.kt)("h2",{id:"alert-rules"},"Alert rules"),(0,o.kt)("p",null,"KubeBlocks has a set of general built-in alter rules to meet the alert needs of different types of data products and provides an out-of-the-box experience without further configurations. These alert rules provide the best practice for cluster operation and maintenance. These alarm rules further improve alert accuracy and reduce the probability of false negatives and false positives through experience-based smoothing windows, alarm thresholds, alarm levels, and alarm indicators."),(0,o.kt)("p",null,"Taking PostgreSQL as an example, the alert rules have built-in common abnormal events, such as instance down, instance restart, slow query, connection amount, deadlock, and cache hit rate.\nThe following example shows PostgreSQL alert rules (refer to ",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/docs/prometheus/latest/querying/basics/"},"Prometheus")," for syntax). When the amount of active connections exceeds 80% of the threshold and lasts for 2 minutes, Prometheus triggers a warning and sends it to AlertManager."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'alert: PostgreSQLTooManyConnections\n  expr: |\n    sum by (namespace,app_kubernetes_io_instance,pod) (pg_stat_activity_count{datname!~"template.*|postgres"})\n    > on(namespace,app_kubernetes_io_instance,pod)\n    (pg_settings_max_connections - pg_settings_superuser_reserved_connections) * 0.8\n  for: 2m\n  labels:\n    severity: warning\n  annotations:\n    summary: "PostgreSQL too many connections (> 80%)"\n    description: "PostgreSQL has too many connections and the value is {{ $value }}. (instance: {{ $labels.pod }})"\n')),(0,o.kt)("p",null,"You can view all the built-in alert rules in ",(0,o.kt)("strong",{parentName:"p"},"Alerts Tab")," of ",(0,o.kt)("strong",{parentName:"p"},"Prometheus Dashboards"),". Run the commands below to open Prometheus Dashboards."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# View dashboards list\nkbcli dashboard list\n\n# Open Prometheus Dashboards\nkbcli dashboard open kubeblocks-prometheus-server # Here is an example and fill in the actual name based on the above dashboard list\n")),(0,o.kt)("h2",{id:"configure-im-alert-1"},"Configure IM alert"),(0,o.kt)("p",null,"The alert message notification of Kubeblocks mainly adopts the AlertManager native capability. After receiving the Prometheus alarm, KubeBlocks performs multiple steps, including deduplication, grouping, silence, suppression, and routing, and finally sends it to the corresponding notification channel.\nAlertManager integrates a set of notification channels, such as Email and Slack. Kubeblocks extends new IM class notification channels with AlertManger Webhook."),(0,o.kt)("p",null,"This tutorial takes configuring Feishu as the notification channel as an example."),(0,o.kt)("h3",{id:"before-you-start"},"Before you start"),(0,o.kt)("p",null,"To receive alerts, you need to deploy monitoring components and enable cluster monitoring first. Refer to ",(0,o.kt)("a",{parentName:"p",href:"/docs/user_docs/kubeblocks-for-postgresql/observability/monitor-database"},"Monitor database")," for details."),(0,o.kt)("h3",{id:"step-1-configure-alert-channels"},"Step 1. Configure alert channels"),(0,o.kt)("p",null,"Configure the notification channels in advance based on your needs and obtain the necessary information for the following steps.\nTaking Feishu as an example, you can obtain the webhook address after creating a custom robot. If the signature verification in the security configuration is enabled, you can obtain the signature key in advance."),(0,o.kt)("p",null,"Currently, Feishu custom bot, DingTalk custom bot, WeChat Enterprise custom bot, and Slack are supported. You can refer to the following guides to configure notification channels."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://open.feishu.cn/document/ukTMukTMukTM/ucTM5YjL3ETO24yNxkjN"},"Feishu custom bot")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://open.dingtalk.com/document/orgapp/custom-robot-access"},"DingTalk custom bot")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.work.weixin.qq.com/document/path/91770"},"WeChat Enterprise custom bot")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://api.slack.com/messaging/webhooks"},"Slack"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Notes:"))),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"Each notification channel has its interface call amount and frequency limits and when the limits are reached, the channel limits traffic and alerts are not sent out. "),(0,o.kt)("li",{parentName:"ul"},"The SLA of the service provided by a single channel cannot guarantee the alerts are sent successfully. Therefore, it is recommended to configure multiple notification channels to ensure availability."))),(0,o.kt)("h3",{id:"step-2-configure-the-receiver"},"Step 2. Configure the receiver"),(0,o.kt)("p",null,"To improve usability, ",(0,o.kt)("inlineCode",{parentName:"p"},"kbcli")," develops the ",(0,o.kt)("inlineCode",{parentName:"p"},"alert")," subcommand to simplify the receiver configuration. You can set the notification channels and receivers by the ",(0,o.kt)("inlineCode",{parentName:"p"},"alert")," subcommand. This subcommand also supports condition filters, such as cluster names and severity levels. After the configuration succeeds, it takes effect without restarting the service."),(0,o.kt)("p",null,"Add an alert receiver."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kbcli alert add-receiver \n--webhook='xxx' --cluster=xx --severity=xx\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Example"))),(0,o.kt)("p",null,"   The following commands show how to add a receiver to Feishu based on different requirements.\nThe webhook address below is an example and you need to replace it with the actual address before running the command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Signature authentication is disabled\nkbcli alert add-receiver\n--webhook='url=https://open.feishu.cn/open-apis/bot/v2/hook/foo'\n\n# Signature authentication is enabled and sign is used as the value of token\nkbcli alert add-receiver\n--webhook='url=https://open.feishu.cn/open-apis/bot/v2/hook/foo,token=sign'\n\n# Only receive the alerts from a cluster named pg\nkbcli alert add-receiver\n--webhook='url=https://open.feishu.cn/open-apis/bot/v2/hook/foo' --cluster=pg\n\n# Only receive the critical alerts from a cluster named pg\nkbcli alert add-receiver\n--webhook='url=https://open.feishu.cn/open-apis/bot/v2/hook/foo' --cluster=pg --severity=critical\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Note:"))),(0,o.kt)("p",{parentName:"blockquote"},"For detailed command description, run ",(0,o.kt)("inlineCode",{parentName:"p"},"kbcli alert add-receiver -h"),".")),(0,o.kt)("p",null,"Run the command below to view the notification configurations."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kbcli alert list-receivers\n")),(0,o.kt)("p",null,"Run the command below to delete the notification channel and receiver if you want to disable the alert function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kbcli alert delete-receiver <receiver-name>\n")),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("p",null,"If you cannot receive alert notices, run the commands below to get the logs of AlertManager and AlertManager-Webhook-Adaptor. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Find the corresponding Pod of AlertManager and get Pod name\nkubectl get pods -l 'release=kubeblocks,app=prometheus,component=alertmanager'\n\n# Search AlertManeger logs\nkubectl logs <pod-name> -c prometheus-alertmanager\n\n# Find the corresponding Pod of AlertManager-Webhook-Adaptor and get Pod name\nkubectl get pods -l 'app.kubernetes.io/instance=kubeblocks,app.kubernetes.io/name=alertmanager-webhook-adaptor'\n\n# Search AlertManager-Webhook-Adaptor logs\nkubectl logs <pod-name> -c alertmanager-webhook-adaptor\n")))}d.isMDXComponent=!0},3920:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/observability_alert-98278c5f4d4b6d2973e047c40c212d9c.png"}}]);